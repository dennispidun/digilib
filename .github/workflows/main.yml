on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: Build App
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: client/node-moduless
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build
        run: |
          cd client
          npm i
          npm run buildWithoutTest
      - uses: actions/upload-artifact@master
        with:
          name: frontend
          path: client/dist
  build-backend:
    needs: build-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@master
        with:
          name: frontend
          path: client-frontend
      - run: |
          mkdir src/main/resources/static
          cp -r client-frontend/client/** src/main/resources/static
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: ./gradlew bootJar
      - uses: actions/upload-artifact@master
        with:
          name: app
          path: build/libs/digilib-*.jar
  deploy:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: app
          path: app
      - name: Copy file via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
        with:
          source: "/app"
          target: "/opt/app"
      - name: Executing remote  command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: ls -la /opt/app
